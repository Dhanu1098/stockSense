name: Deploy to hosting

on:
  push:
    branches: [main]
    
permissions:
  contents: write
  issues: write
  pull-requests: write
  statuses: write
  checks: write

jobs:
  build-test-deploy:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      test_failed: ${{ steps.set_test_status.outputs.test_failed }}
    
    env:
      VITE_BASE_URL: ${{ secrets.BASE_URL }}
      VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
      VITE_BREEZE_API_KEY: ${{ secrets.VITE_BREEZE_API_KEY }}
      VITE_BREEZE_API_SECRET: ${{ secrets.VITE_BREEZE_API_SECRET }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: 'npm'

      # Install all dependency
      - name: Install dependencies
        run: |
          npm clean-install

      # setup all environment variables and create .env file
      - name: Setup Environment
        run: |
          # Create .env file with all environment variables
          echo "Creating .env file..."
          cat << EOF > .env
          VITE_BASE_URL=${{ secrets.BASE_URL }}
          VITE_GEMINI_API_KEY=${{ secrets.VITE_GEMINI_API_KEY }}
          VITE_BREEZE_API_KEY=${{ secrets.VITE_BREEZE_API_KEY }}
          VITE_BREEZE_API_SECRET=${{ secrets.VITE_BREEZE_API_SECRET }}
          EOF
          
          # Create .env.example file for testing
          cp .env .env.example
          
          # Display env file content (excluding sensitive data)
          echo "Environment files created successfully"
          echo "Checking .env structure (keys only):"
          grep -v '^#' .env | cut -d '=' -f 1

      # build the app
      - name: Build the Vite App
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          echo "Starting build process..."
          npm run build || (echo "BUILD_FAILED=true" >> $GITHUB_OUTPUT && exit 1)

      # To create the .htaccess file within the dist folder
      - name: Create .htaccess file
        run: |
          echo "Options -MultiViews" > dist/.htaccess
          echo "RewriteEngine On" >> dist/.htaccess
          echo "RewriteBase ${{ secrets.BASE_URL }}" >> dist/.htaccess
          echo "RewriteCond %{REQUEST_FILENAME} !-f" >> dist/.htaccess
          echo "RewriteCond %{REQUEST_FILENAME} !-d" >> dist/.htaccess
          echo "RewriteRule ^ index.html [L]" >> dist/.htaccess

      # deploy to ftp server
      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          dangerous-clean-slate: true